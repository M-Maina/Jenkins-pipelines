pipeline {
    agent any
    
    tools {
        maven 'maven3'
        jdk 'jdk17'
    }
    
    environment{
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Git Checkout') {
            steps {
               git 'https://github.com/jaiswaladi246/secretsanta-generator.git'
            }
        }
        
        stage('Compile') {
            steps {
                sh 'mvn compile'
            }
        }
        
        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar') { //sonar server name
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=santa \
                          -Dsonar.projectKey=santa -Dsonar.java.binaries=. '''
                }
            }
        }
        
         stage('OWASP Check') {
            steps {
                dependencyCheck additionalArguments: ' --scan ./', odcInstallation: 'D-Check' //owasp settings for owasp integration
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        
         stage('Build') {
            steps {
                sh 'mvn package'
            }
        }

         stage('Build Docker Image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                    sh 'docker build -t santa:latest .'
                }
                }
            }
        }
        
        stage('Tag & Push Docker Image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') { //docker fails to login
                    sh 'docker tag santa:latest wamah/santa:latest'
                    sh 'docker push wamah/santa:latest'
                }
                }
            }
        }
        
        
    }
}
