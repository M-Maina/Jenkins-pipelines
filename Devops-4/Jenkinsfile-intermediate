pipeline {
    agent any
    
    tools {
        jdk 'jdk17'
        maven 'maven3'
    }
    
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Git Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Code Compile') {
            steps {
                sh 'mvn clean compile'
            }
        }
        
        stage('Unit Testing') {
            steps {
                sh 'mvn test'
            }
        }
        
        stage('Sonar Analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    script {
                        def scannerHome = tool name: 'sonar-scanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                        sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=Petclinic"
                    }
                }
            }
        }
        
        stage('Owasp Check') {
            steps {
                script {
                    sh 'mvn org.owasp:dependency-check-maven:check'
                }
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'target/dependency-check-report', reportFiles: 'dependency-check-report.html', reportName: 'OWASP Dependency-Check Report'])
            }
        }
        
        stage('Build Stage') {
            steps {
                sh 'mvn clean install'
            }
        }
        
        stage('Docker Build') {
            steps {
                script {
                    withDockerServer([credentialsId: 'docker-cred', url: 'https://docker.example.com']) {
                        sh 'docker build -t petclinic .'
                        sh 'docker tag petclinic wamah/petclinic25:v1'
                        sh 'docker push wamah/petclinic25:v1'
                    }
                }
            }
        }
        
        stage('Deploy using Docker') {
            steps {
                script {
                    sh 'docker run -d --name pet1 -p 8082:8082 wamah/petclinic25:v1'
                }
            }
        }
        
        stage('Deploy to Tomcat') {
            steps {
                sh 'cp target/petclinic.war /opt/apache-tomcat-9.0.65/webapps/'
            }
        }
    }
}
